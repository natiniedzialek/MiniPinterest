@model MiniPinterest.Web.Models.ViewModels.AddPinRequest
@{
}

<div class="bg-secondary bg-opacity-10 py-2">
    <div class="container">
        <h1>Add New Pin</h1>
    </div>
</div>

<div class="container py-5">
    <form method="post">
        <div>
            <label class="form-label">Upload Image</label>
            <input type="file" id="imageUpload" class="form-control" />

            <img src="" id="imageDisplay" style="display:none; width: 300px; margin:10px" />
        </div>

        <div class="mb-3">
            <label cladd="form-label">Title</label>
            <input type="text" class="form-control" id="heading" asp-for="Title" />
        </div>

        <div class="mb-3">
            <label cladd="form-label">Description</label>
            <input type="text" class="form-control" id="description" asp-for="Description" />
        </div>

        <div class="form-check mb-3">
            <label for="form-check-label">Public</label>
            <input class="form-check-input" type="checkbox" id="public" value="true" asp-for="IsPublic">
        </div>

        <div class="mb-3">
            <button type="submit" class="btn btn-dark">
                Add Pin
            </button>
        </div>
    </form>
</div>

<script>
    const uploadElement = document.getElementById('imageUpload');
    const imageDisplayElement = document.getElementById('imageDisplay');

    async function uploadImage(e) {
        let data = new FormData();
        data.append('file', e.target.files[0]);

        await fetch('/api/images', {
            method: 'POST',
            headers: {
                'Accept': '*/*'
            },
            body: data
        }).then(response => response.json())
            .then(result => {
                // Set the image URL in the form data
                const formElement = document.querySelector('form');
                const imageUrlInput = document.createElement('input');
                imageUrlInput.type = 'hidden';
                imageUrlInput.name = 'ImageUrl';
                imageUrlInput.value = result.imageURL;
                formElement.appendChild(imageUrlInput);

                // Display the uploaded image
                imageDisplayElement.src = result.imageURL;
                imageDisplayElement.style.display = 'block';
            });
    }

    uploadElement.addEventListener('change', uploadImage);
</script>